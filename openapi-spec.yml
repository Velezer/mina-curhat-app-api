openapi: 3.0.2

info: 
  title: Mina Curhat App API
  version: 1.0.0
  contact:
    name: Velezer
    url: https://github.com/Velezer

externalDocs:
  description: Repository Link
  url: https://github.com/Velezer/mina-curhat-app-api

servers:
  - url: https://mina-curhat-api.herokuapp.com/


components:
  securitySchemes:
    jwt_token:
      type: http
      scheme: 'Bearer'
  schemas:
    anonymInput:
      type: object
      properties:
        name:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
    anonymLoginSuccess:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            token:
              type: string
    getAllConsultants:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              role:
                type: string
              gender:
                type: string
              __v:
                type: string
    consultantRegister:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - consultant
            - ustadz
        gender:
          type: string
          enum:
            - male
            - female

    basicMessage:
      type: object
      properties:
        message:
          type: string

    validationError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
              param:
                type: string
              location:
                type: string

    getChatrooms:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items: 
            type: object
            properties:
              consultant:
                type: string
              anonym:
                type: string
              chatroom_token:
                type: string
    getChatroomById:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
          properties:
            consultant:
              type: string
            anonym:
              type: string
            chatroom_token:
              type: string

paths:
  /:
    get:
      summary: check if server is up
      description: use this endpoint to check if server is up and running
      tags:
        - home
      responses:
        200:
          description: OK


  /api/anonym/login:
    post:
      summary: User login as an anonymous
      tags:
        - anonym
      requestBody:
        required: true
        description: anonym data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/anonymInput'
            examples:
              male: 
                value:
                  name: male name
                  gender: male
              female: 
                value:
                  name: female name
                  gender: female
      responses:
        200:
          description: Anonym login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anonymLoginSuccess'
        409:
          description: Conflict, anonym name has taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        400:
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationError'
  
  /api/consultants:
    get:
      summary: get all consultants
      description: get all consultants
      tags:
        - consultants
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllConsultants'
              example:
                message: success
                data: [{
                    "_id": "6173d2e7365b7f5cefd2017d",
                    "name": "secretConsultant",
                    "role": "consultant",
                    "gender": "female",
                    "__v": 0
                  }]
  
  /api/consultants/register:
    post:
      summary: register as a consultants
      description: register as a consultants
      tags:
        - consultants
      requestBody:
        required: true
        description: consultant data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consultantRegister'
            example:
              name: name
              password: password
              role: consultant
              gender: male
                
      responses:
        201:
          description: consultant created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        409:
          description: consultant already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        400:
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validationError'
  /api/chatrooms:
    get:
      security:
        - jwt_token: []
      tags:
        - chatroom
      summary: get chatrooms
      description: it depends on your role in jwt token
      responses:
        200:
          description: get chatroom success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChatrooms'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
  /api/chatrooms/{_id}:
    get:
      security:
        - jwt_token: []
      tags:
        - chatroom
      summary: get chatrooms by id
      description: it depends on your role in jwt token
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string

      responses:
        200:
          description: get chatroom success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getChatroomById'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
        500:
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicMessage'
  
    
